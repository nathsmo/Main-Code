actor_net_lr: 0.0001
batch_size: 128
beam_width: 10
critic_net_lr: 0.0001
data_dir: data
decode_len: 10
decoder: pointer
disable_tqdm: True
dropout: 0.1
emb_type: enhanced_linear
embedding_dim: 128
entropy_coeff: 0.0
forget_bias: 1.0
gpu: 3
hidden_dim: 128
infer_type: single
input_dim: 2
is_train: False
load_path: 
log_dir: logs/tsp10-2024-06-03_15-50-02
log_interval: 200
mask_glimpses: True
mask_pointer: True
max_grad_norm: 2.0
model_dir: ./output_models/A1_totest/agent_complete.pth
n_glimpses: 0
n_nodes: 10
n_process_blocks: 3
n_train: 25000
num_heads: 1
random_seed: 24601
rnn_layers: 1
save_interval: 10000
stdout_print: True
tanh_exploration: 10.0
task: tsp10
task_name: tsp
test_interval: 200
test_size: 1000
use_tanh: False
variation: A1
# Set random seed to 24601
# Set parameters for this run:
# Variation:    A1
# Task:         tsp10
# Decoder:      pointer
# Embed type:   enhanced_linear
# n_glimpses:   0
# rnn layers:   1
# n_train:      25000
# num heads:    1
Embedding - enhanced
Agent created - Pointer Network.
Evaluation started ...


Val-Step of greedy: 0

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 0

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 0

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 0

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 0

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 0

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 0

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 0

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 200

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 200

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 200

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 200

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 200

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 200

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 200

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 200

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 400

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 400

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 400

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 400

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 400

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 400

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 400

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 400

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 600

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 600

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 600

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 600

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 600

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 600

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 600

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 600

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 800

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 800

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 800

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 800

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 800

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 800

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 800

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0


Val-Step of greedy: 800

Example test input: [[tensor(0.7140), tensor(0.8641)], [tensor(0.8640), tensor(0.6204)], [tensor(0.8399), tensor(0.8009)], [tensor(0.4657), tensor(0.0063)], [tensor(0.2547), tensor(0.5348)], [tensor(0.6982), tensor(0.6354)], [tensor(0.2960), tensor(0.2944)], [tensor(0.3696), tensor(0.4191)], [tensor(0.4550), tensor(0.4347)], [tensor(0.5253), tensor(0.1383)]]

Example test output: [[tensor(0.7140), tensor(0.8641)], [tensor(0.2547), tensor(0.5348)], [tensor(0.2960), tensor(0.2944)], [tensor(0.4550), tensor(0.4347)], [tensor(0.3696), tensor(0.4191)], [tensor(0.6982), tensor(0.6354)], [tensor(0.8399), tensor(0.8009)], [tensor(0.8640), tensor(0.6204)], [tensor(0.4657), tensor(0.0063)], [tensor(0.5253), tensor(0.1383)]]

Example test reward: -3.527864456176758 - best: 0

 Validation overall avg_reward: -4.389586925506592
Validation overall reward std: 0.7732988595962524
Finished evaluation with 999 steps in 00:00:04.
##################################################################
Total time is 00:00:04
